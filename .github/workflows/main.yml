# This is a basic workflow to help you get started with Actions

name: CICD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  release:
    types: [created]
env:
  ENV : "develop"
  CLUSTER_NAME : "vault"
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  first-job:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: validate env
        env:
          BRANCH : $(git branch -r --contains ${GITHUB_SHA} | grep "")
          RELEASE_VERSION : $(echo ${GITHUB_REF} | sed -e "s/refs\/tags\///g" | sed -e "s/\//-/g")
          RELEASE_BRANCH_NAME : 'release'
          DEVELOP_BRANCH_NAME : 'main'
          FEATURE_BRANCH_NAME : 'feature'
          RELEASE_PREFIX : 'RC-'
        run: |
          echo "branch : " ${BRANCH}
          if [[ 'github.event.release.prerelease' != true ]] && [[ "$BRANCH" == "$RELEASE_BRANCH_NAME" ]]; then
            echo "valid for prod env";
            echo ::set-env name=ENV="production";
            echo ::set-env name=CLUSTER_NAME=vault-prod;
          elif [[ 'github.event.release.prerelease' == true ]] && [[ "$BRANCH" == "$RELEASE_BRANCH_NAME" ]] && [[ "$RELEASE_VERSION" == "$RELEASE_PREFIX"* ]]; then
            echo "valid for staging env";
            echo ::set-env name=ENV="staging";
            echo ::set-env name=CLUSTER_NAME=vault-staging;
          elif [[ "$BRANCH" == "$DEVELOP_BRANCH_NAME" ]] || [[ "$BRANCH" == "$FEATURE_BRANCH_NAME"* ]]; then
            echo "valid for dev env";
            echo ::set-env name=ENV="develop";
          else
            echo "no valid env to set!";
            exit 1;
          fi    
  second-job:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: print env
        id: print_env
        run: 
          if [[ ${{ env.ENV }} == 'develop' ]]; then
            echo "This is develop env";
          fi
          if [[ ${{ env.ENV }} == 'staging' ]]; then
            echo "This is staging env";
          fi
      - if: ${{  env.ENV == 'develop' }} 
        name: an other develop env
        id: an_other_develop_env        
        run: |
          echo "Again this is develop env"
      - if: ${{  env.ENV == 'staging' }} 
        name: an other staging env
        id: an_other_staging_env        
        run: |
          echo "Again this is staging env";

      
      
      
      
