# This is a basic workflow to help you get started with Actions

name: python

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
     - main
     - release
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      VAULT_ADDR : ${{ secrets.VAULT_ADDR}}
      #VAULT_CA : ${{ secrets.VAULT_CA}}
      USER_PAT : ${{ secrets.USER_PAT}}
    strategy:
      matrix:
        python-version: [3.9]
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2    

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v2
        with:
          update-pip: "true"
          path: "./requirements.txt"
      - name: print secrets
        run: |
          echo $VAULT_CA >> ca2.crt
          cat ca2.crt
        shell: bash
        env:
          VAULT_CA : ${{secrets.VAULT_CA}}          
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: VAULT_CA
          path: ca2.crt
    # Access resources using vault GCP SA key
      - name: Call Python function
        run: |
          #echo " VAULT_ADD ** $VAULT_ADDR **" | sed 's/./& /g'
          #echo " VAULT_CA ** $VAULT_CA **" | sed 's/./& /g'
          #echo " USER_PAT ** $USER_PAT **"  | sed 's/./& /g'
          export my_sa_key=`python sa_key_roleset.py $VAULT_ADDR ca2.crt $USER_PAT`
          echo "my_sa_key= ** $my_sa_key **"
